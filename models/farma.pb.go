// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: farma.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionStatus int32

const (
	SubscriptionStatus_UNKNOWN      SubscriptionStatus = 0
	SubscriptionStatus_UNSUBSCRIBED SubscriptionStatus = 1
	SubscriptionStatus_SUBSCRIBED   SubscriptionStatus = 2
	SubscriptionStatus_RATE_LIMITED SubscriptionStatus = 3
)

// Enum value maps for SubscriptionStatus.
var (
	SubscriptionStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNSUBSCRIBED",
		2: "SUBSCRIBED",
		3: "RATE_LIMITED",
	}
	SubscriptionStatus_value = map[string]int32{
		"UNKNOWN":      0,
		"UNSUBSCRIBED": 1,
		"SUBSCRIBED":   2,
		"RATE_LIMITED": 3,
	}
)

func (x SubscriptionStatus) Enum() *SubscriptionStatus {
	p := new(SubscriptionStatus)
	*p = x
	return p
}

func (x SubscriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_farma_proto_enumTypes[0].Descriptor()
}

func (SubscriptionStatus) Type() protoreflect.EnumType {
	return &file_farma_proto_enumTypes[0]
}

func (x SubscriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionStatus.Descriptor instead.
func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{0}
}

type EventType int32

const (
	EventType_NONE                           EventType = 0
	EventType_FRAME_ADDED                    EventType = 1
	EventType_FRAME_REMOVED                  EventType = 2
	EventType_NOTIFICATIONS_ENABLED          EventType = 3
	EventType_NOTIFICATIONS_DISABLED         EventType = 4
	EventType_NOTIFICATION_SENT              EventType = 5
	EventType_NOTIFICATION_FAILED_OTHER      EventType = 6
	EventType_NOTIFICATION_FAILED_INVALID    EventType = 7
	EventType_NOTIFICATION_FAILED_RATE_LIMIT EventType = 8
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "NONE",
		1: "FRAME_ADDED",
		2: "FRAME_REMOVED",
		3: "NOTIFICATIONS_ENABLED",
		4: "NOTIFICATIONS_DISABLED",
		5: "NOTIFICATION_SENT",
		6: "NOTIFICATION_FAILED_OTHER",
		7: "NOTIFICATION_FAILED_INVALID",
		8: "NOTIFICATION_FAILED_RATE_LIMIT",
	}
	EventType_value = map[string]int32{
		"NONE":                           0,
		"FRAME_ADDED":                    1,
		"FRAME_REMOVED":                  2,
		"NOTIFICATIONS_ENABLED":          3,
		"NOTIFICATIONS_DISABLED":         4,
		"NOTIFICATION_SENT":              5,
		"NOTIFICATION_FAILED_OTHER":      6,
		"NOTIFICATION_FAILED_INVALID":    7,
		"NOTIFICATION_FAILED_RATE_LIMIT": 8,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_farma_proto_enumTypes[1].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_farma_proto_enumTypes[1]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{1}
}

type Frame struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Domain string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// string webhook = 4;
	PublicKey     *PubKey `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_farma_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Frame) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Frame) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Frame) GetPublicKey() *PubKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type PubKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       string                 `protobuf:"bytes,1,opt,name=frameId,proto3" json:"frameId,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PubKey) Reset() {
	*x = PubKey{}
	mi := &file_farma_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubKey) ProtoMessage() {}

func (x *PubKey) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubKey.ProtoReflect.Descriptor instead.
func (*PubKey) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{1}
}

func (x *PubKey) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *PubKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Subscription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       string                 `protobuf:"bytes,1,opt,name=frameId,proto3" json:"frameId,omitempty"`
	UserId        uint64                 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AppId         uint64                 `protobuf:"varint,3,opt,name=appId,proto3" json:"appId,omitempty"`
	Status        SubscriptionStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=models.SubscriptionStatus" json:"status,omitempty"`
	Url           string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Token         string                 `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	Ctime         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Signature     []byte                 `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	Verified      bool                   `protobuf:"varint,10,opt,name=verified,proto3" json:"verified,omitempty"`
	AppKey        []byte                 `protobuf:"bytes,11,opt,name=appKey,proto3" json:"appKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_farma_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{2}
}

func (x *Subscription) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *Subscription) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Subscription) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Subscription) GetStatus() SubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return SubscriptionStatus_UNKNOWN
}

func (x *Subscription) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Subscription) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Subscription) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *Subscription) GetMtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *Subscription) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Subscription) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *Subscription) GetAppKey() []byte {
	if x != nil {
		return x.AppKey
	}
	return nil
}

type Notification struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Endpoint          string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Title             string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message           string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Link              string                 `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	Tokens            []string               `protobuf:"bytes,6,rep,name=tokens,proto3" json:"tokens,omitempty"`
	SuccessTokens     []string               `protobuf:"bytes,7,rep,name=successTokens,proto3" json:"successTokens,omitempty"`
	FailedTokens      []string               `protobuf:"bytes,8,rep,name=failedTokens,proto3" json:"failedTokens,omitempty"`
	RateLimitedTokens []string               `protobuf:"bytes,9,rep,name=rateLimitedTokens,proto3" json:"rateLimitedTokens,omitempty"`
	Ctime             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Version           *uint64                `protobuf:"varint,11,opt,name=version,proto3,oneof" json:"version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_farma_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{3}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Notification) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *Notification) GetSuccessTokens() []string {
	if x != nil {
		return x.SuccessTokens
	}
	return nil
}

func (x *Notification) GetFailedTokens() []string {
	if x != nil {
		return x.FailedTokens
	}
	return nil
}

func (x *Notification) GetRateLimitedTokens() []string {
	if x != nil {
		return x.RateLimitedTokens
	}
	return nil
}

func (x *Notification) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *Notification) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type UserLog struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	FrameId string                 `protobuf:"bytes,1,opt,name=frameId,proto3" json:"frameId,omitempty"`
	UserId  uint64                 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AppId   uint64                 `protobuf:"varint,3,opt,name=appId,proto3" json:"appId,omitempty"`
	EvtType EventType              `protobuf:"varint,4,opt,name=evtType,proto3,enum=models.EventType" json:"evtType,omitempty"`
	// string eventContext = 5;
	Ctime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// Types that are valid to be assigned to EvtContext:
	//
	//	*UserLog_EventContextNotification
	//	*UserLog_EventContextOther
	//	*UserLog_EventContextNone
	EvtContext    isUserLog_EvtContext `protobuf_oneof:"evtContext"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLog) Reset() {
	*x = UserLog{}
	mi := &file_farma_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLog) ProtoMessage() {}

func (x *UserLog) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLog.ProtoReflect.Descriptor instead.
func (*UserLog) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{4}
}

func (x *UserLog) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *UserLog) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserLog) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *UserLog) GetEvtType() EventType {
	if x != nil {
		return x.EvtType
	}
	return EventType_NONE
}

func (x *UserLog) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *UserLog) GetEvtContext() isUserLog_EvtContext {
	if x != nil {
		return x.EvtContext
	}
	return nil
}

func (x *UserLog) GetEventContextNotification() *EventContextNotification {
	if x != nil {
		if x, ok := x.EvtContext.(*UserLog_EventContextNotification); ok {
			return x.EventContextNotification
		}
	}
	return nil
}

func (x *UserLog) GetEventContextOther() *EventContextOther {
	if x != nil {
		if x, ok := x.EvtContext.(*UserLog_EventContextOther); ok {
			return x.EventContextOther
		}
	}
	return nil
}

func (x *UserLog) GetEventContextNone() *EventContextNone {
	if x != nil {
		if x, ok := x.EvtContext.(*UserLog_EventContextNone); ok {
			return x.EventContextNone
		}
	}
	return nil
}

type isUserLog_EvtContext interface {
	isUserLog_EvtContext()
}

type UserLog_EventContextNotification struct {
	EventContextNotification *EventContextNotification `protobuf:"bytes,7,opt,name=eventContextNotification,proto3,oneof"`
}

type UserLog_EventContextOther struct {
	EventContextOther *EventContextOther `protobuf:"bytes,8,opt,name=eventContextOther,proto3,oneof"`
}

type UserLog_EventContextNone struct {
	EventContextNone *EventContextNone `protobuf:"bytes,9,opt,name=eventContextNone,proto3,oneof"`
}

func (*UserLog_EventContextNotification) isUserLog_EvtContext() {}

func (*UserLog_EventContextOther) isUserLog_EvtContext() {}

func (*UserLog_EventContextNone) isUserLog_EvtContext() {}

type EventContextNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventContextNotification) Reset() {
	*x = EventContextNotification{}
	mi := &file_farma_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventContextNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventContextNotification) ProtoMessage() {}

func (x *EventContextNotification) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventContextNotification.ProtoReflect.Descriptor instead.
func (*EventContextNotification) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{5}
}

func (x *EventContextNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventContextNotification) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EventContextNotification) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type EventContextOther struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       string                 `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventContextOther) Reset() {
	*x = EventContextOther{}
	mi := &file_farma_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventContextOther) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventContextOther) ProtoMessage() {}

func (x *EventContextOther) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventContextOther.ProtoReflect.Descriptor instead.
func (*EventContextOther) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{6}
}

func (x *EventContextOther) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type EventContextNone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventContextNone) Reset() {
	*x = EventContextNone{}
	mi := &file_farma_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventContextNone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventContextNone) ProtoMessage() {}

func (x *EventContextNone) ProtoReflect() protoreflect.Message {
	mi := &file_farma_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventContextNone.ProtoReflect.Descriptor instead.
func (*EventContextNone) Descriptor() ([]byte, []int) {
	return file_farma_proto_rawDescGZIP(), []int{7}
}

var File_farma_proto protoreflect.FileDescriptor

var file_farma_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x66, 0x61, 0x72, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x06, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22,
	0xe8, 0x02, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0xeb, 0x02, 0x0a, 0x0c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x63,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x03, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07,
	0x65, 0x76, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x65, 0x76, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x18, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x11, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x10, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x65, 0x76, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5a, 0x0a, 0x18,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x2a, 0x55, 0x0a, 0x12, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x2a, 0xeb, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x08,
	0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x72, 0x79, 0x70, 0x61, 0x6e, 0x2f, 0x66, 0x61, 0x72, 0x6d, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_farma_proto_rawDescOnce sync.Once
	file_farma_proto_rawDescData []byte
)

func file_farma_proto_rawDescGZIP() []byte {
	file_farma_proto_rawDescOnce.Do(func() {
		file_farma_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_farma_proto_rawDesc), len(file_farma_proto_rawDesc)))
	})
	return file_farma_proto_rawDescData
}

var file_farma_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_farma_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_farma_proto_goTypes = []any{
	(SubscriptionStatus)(0),          // 0: models.SubscriptionStatus
	(EventType)(0),                   // 1: models.EventType
	(*Frame)(nil),                    // 2: models.Frame
	(*PubKey)(nil),                   // 3: models.PubKey
	(*Subscription)(nil),             // 4: models.Subscription
	(*Notification)(nil),             // 5: models.Notification
	(*UserLog)(nil),                  // 6: models.UserLog
	(*EventContextNotification)(nil), // 7: models.EventContextNotification
	(*EventContextOther)(nil),        // 8: models.EventContextOther
	(*EventContextNone)(nil),         // 9: models.EventContextNone
	(*timestamppb.Timestamp)(nil),    // 10: google.protobuf.Timestamp
}
var file_farma_proto_depIdxs = []int32{
	3,  // 0: models.Frame.publicKey:type_name -> models.PubKey
	0,  // 1: models.Subscription.status:type_name -> models.SubscriptionStatus
	10, // 2: models.Subscription.ctime:type_name -> google.protobuf.Timestamp
	10, // 3: models.Subscription.mtime:type_name -> google.protobuf.Timestamp
	10, // 4: models.Notification.ctime:type_name -> google.protobuf.Timestamp
	1,  // 5: models.UserLog.evtType:type_name -> models.EventType
	10, // 6: models.UserLog.ctime:type_name -> google.protobuf.Timestamp
	7,  // 7: models.UserLog.eventContextNotification:type_name -> models.EventContextNotification
	8,  // 8: models.UserLog.eventContextOther:type_name -> models.EventContextOther
	9,  // 9: models.UserLog.eventContextNone:type_name -> models.EventContextNone
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_farma_proto_init() }
func file_farma_proto_init() {
	if File_farma_proto != nil {
		return
	}
	file_farma_proto_msgTypes[3].OneofWrappers = []any{}
	file_farma_proto_msgTypes[4].OneofWrappers = []any{
		(*UserLog_EventContextNotification)(nil),
		(*UserLog_EventContextOther)(nil),
		(*UserLog_EventContextNone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_farma_proto_rawDesc), len(file_farma_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_farma_proto_goTypes,
		DependencyIndexes: file_farma_proto_depIdxs,
		EnumInfos:         file_farma_proto_enumTypes,
		MessageInfos:      file_farma_proto_msgTypes,
	}.Build()
	File_farma_proto = out.File
	file_farma_proto_goTypes = nil
	file_farma_proto_depIdxs = nil
}
